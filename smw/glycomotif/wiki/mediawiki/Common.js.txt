/* Any JavaScript here will be loaded for all users on every page load. */

// Common action for all pages
window.$ = jQuery;
window.mw = window.mediaWiki = mw;
console.log("Common.js is running");

var topologyComponents, redonlyComponents, nonredonlyComponents;

// s stands for the scripts, while p stand for the loading status for the page
var syncStatus = {"s1": false, "s2": false, "s3": false, "c1": false, "c2": false, "c3": false, "p": false};
function injectEssentialElementForTheViewer(){
    /* Inject the 3 script and the style sheet into each page */
    jQuery.ajaxSetup({cache: true});
    jQuery.getScript("https://cdn.jsdelivr.net/gh/glygen-glycan-data/JSWidgets/HGV/hgv.js", function () {
        syncStatus.s1 = true;
        syncAndContinue();
    });
    jQuery.getScript("https://cdnjs.cloudflare.com/ajax/libs/vis/4.19.1/vis.min.js", function () {
        syncStatus.s2 = true;
        syncAndContinue();
    });

    // Test URL: https://cdn.jsdelivr.net/gh/glygen-glycan-data/PyGly@c01f426fe6147f9ce5c15495fc2dc0d5bd3b1eda/smw/glycomotif/data/glycoepitope.txt
    // Production URL: https://raw.githubusercontent.com/glygen-glycan-data/PyGly/master/smw/glycomotif/data/topology.json

    jQuery.getScript("https://d3js.org/d3.v3.min.js", function () {
        syncStatus.s3 = true;
        d3.json("https://raw.githubusercontent.com/glygen-glycan-data/PyGly/master/smw/glycomotif/data/topology.json", function (data) {
            topologyComponents = data;
            syncStatus.c1 = true;
            syncAndContinue();
        });
        d3.json("https://raw.githubusercontent.com/glygen-glycan-data/PyGly/master/smw/glycomotif/data/redonly.json", function (data) {
            redonlyComponents = data;
            syncStatus.c2 = true;
            syncAndContinue();
        });
        d3.json("https://raw.githubusercontent.com/glygen-glycan-data/PyGly/master/smw/glycomotif/data/nonredonly.json", function (data) {
            nonredonlyComponents = data;
            syncStatus.c3 = true;
            syncAndContinue();
        });
    });
    $('head').append('<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/vis/4.19.1/vis.min.css" type="text/css" />');
}
if (document.getElementById("hgv_para") != null){
    injectEssentialElementForTheViewer();
}

jQuery(document).ready(function() {
    syncStatus.p = true;
    syncAndContinue();
});

var hgv_option_template = {
    essentials : {
        div_ID : "", // the ID of div container
        component : {}, // the data, it will be added momentarily
        topoOnly : 0,
        viewRoot : "",
        useGlyTouCanAsImageSource : true,
        GlyTouCanImagePara: {
            style: "extended", // Other Options: normal, compact
            format: "png", // Other Options: jpg
            notation: "cfg" // Other Options: cfgbw, uoxf, uoxf-color, cfg-uoxf, iupac
        },
        imgURL1 : "img/", // Unnecessary if useGlyTouCanAsImageSource is true
        imgURL2 : ".png"
    },
    display : {
        enableTitle: false,
        enableNavi: true,
        naviOption: {
            size: 0.2,
            position: 4
        },
        orientation: 2 // 1, 2, 3, 4 Stand for top2bottom left2right bottom2top right2left
    },
    contextMenu : {
        enable: true,
        defaultMenu: false,
        externalURL1: "", //"https://edwardslab.bmcb.georgetown.edu/glycomotif/GM.",
        externalURL2: ""
    }
};
var divid1 = "hgv_topology";
var divid2 = "hgv_topology_navigator";
var divid3 = "hgv_topology_navigator2";

var externalURL1 = "";
var imageURLonCluster = "";
var paraDiv = document.getElementById("hgv_para");
if (paraDiv){
    var gtcacc = paraDiv.getAttribute("data-glytoucan");
    var appPrefix = paraDiv.getAttribute("data-prefix");
    var displayBool = paraDiv.getAttribute("data-display");
    externalURL1 = paraDiv.getAttribute("data-jumpurlprefix");
    imageURLonCluster = paraDiv.getAttribute("data-imageurlprefix");
    var displayBool = true;

}
else{
    var displayBool = false;
}

hgv_option_template.contextMenu.externalURL1 = externalURL1;

var option1 = jQuery.extend(true, {}, hgv_option_template);
var option2 = jQuery.extend(true, {}, hgv_option_template);
var option3 = jQuery.extend(true, {}, hgv_option_template);
option1.essentials.div_ID = divid1;
option2.essentials.div_ID = divid2;
option3.essentials.div_ID = divid3;
option2.essentials.GlyTouCanImagePara.style = "compact";
option3.essentials.GlyTouCanImagePara.style = "compact";
option2.display.orientation = 4;

var viewer1, viewer2, viewer3;

function syncAndContinue (){
    var proceed = true;
    for (var k in syncStatus){
        var v = syncStatus[k];
        if (!v){
            proceed = false
        }
    }
    if (proceed){
        console.log("scripts and page loading complete");
        if (displayBool){
            deepCopyViewer();
            fillTheDiv();
        }
    }
}

function deepCopyViewer(){
    viewer1 = jQuery.extend(true, {}, glycanviewer);
    viewer2 = jQuery.extend(true, {}, glycanviewer);
    viewer3 = jQuery.extend(true, {}, glycanviewer);
}

function fillTheDiv() {
    locateViewer1();
    locateViewer2();
    locateViewer3();
}

// Load topology
function locateViewer1(){
    var flag = false;
    for (var key in topologyComponents){
        if (Object.keys(topologyComponents[key].nodes).includes(gtcacc)){
            var comp = topologyComponents[key];
            for (var node in comp.nodes){
                if (node == "Topology"){
                    comp.nodes["Topology"].alternativeImageURL = "https://edwardslab.bmcb.georgetown.edu/~wzhang/web/glycan_images/snfg/compact/" + gtcacc + ".png";
                }
                else {
                    comp.nodes[node].alternativeImageURL = "https://image.glycosmos.org/snfg/png/" + node;
                }
            }

            option1.essentials.component = comp;
            //var style = '<style>#'+ divid1 + '{width: calc(100%); height: calc(70vh); overflow: hidden; border: solid;border-color: lightgrey;}</style>';
            var style = '<style>#'+ divid1 + '{width: calc(100%); height: calc(70vh); overflow: hidden; border: solid;border-color: lightgrey;}</style>';
            $('head').append(style);
            flag = true;
            break;
        }
    }
    if (flag){
        viewer1.init(option1);
        viewer1.network.fit();
        setTimeout(function(){
            viewer1.network.selectNodes([gtcacc]);
        }, 1500);
    }
    else{
        console.log("Bug in load viewer1")
    }
}

// Load sub-structure matching
function locateViewer2(){
    var flag = false;
    for (var key in nonredonlyComponents){
        if (key == gtcacc){
            var comp = nonredonlyComponents[key];
            for (var node in comp.nodes){
                if (node == gtcacc){
                    comp.nodes[node].alternativeImageURL = "https://image.glycosmos.org/snfg/png/" + node;
                }
                else{
                    comp.nodes[node].alternativeImageURL = "https://image.glycosmos.org/snfg/png/" + node;
                }
            }
            option2.essentials.component = comp;
            var style = '<style>#'+ divid2 + '{width: calc(100%); height: calc(70vh); overflow: hidden; border: solid;border-color: lightgrey;}</style>';
            $('head').append(style);
            flag = true;
            break;
        }
    }
    if (flag){
        viewer2.init(option2);
        viewer2.network.fit();
        setTimeout(function(){
            viewer2.network.selectNodes([gtcacc]);
        }, 1500);

    }
    else{
        console.log("Bug in load viewer2")
    }
}


function locateViewer3(){
    var flag = false;
    for (var key in redonlyComponents){
        if (key == gtcacc){
            var comp = redonlyComponents[key];
            for (var node in comp.nodes){
                if (node == gtcacc){
                    comp.nodes[node].alternativeImageURL = "https://image.glycosmos.org/snfg/png/" + node;
                }
                else{
                    comp.nodes[node].alternativeImageURL = "https://image.glycosmos.org/snfg/png/" + node;
                }
            }
            option3.essentials.component = comp;
            var style = '<style>#'+ divid3 + '{width: calc(100%); height: calc(70vh); overflow: hidden; border: solid;border-color: lightgrey;}</style>';
            $('head').append(style);
            flag = true;
            break;
        }
    }
    if (flag){
        viewer3.init(option3);
        viewer3.network.fit();
        setTimeout(function(){
            viewer3.network.selectNodes([gtcacc]);
        }, 1500);

    }
    else{
        console.log("Bug in load viewer3")
    }
}













if (document.getElementById("motif_align_para") != null){
    // SNFG
    var imageURLprefix = "https://image.glycosmos.org/snfg/png/";
    var imageURLsuffix = "";

    // CFG
    // var imageURLprefix = "https://edwardslab.bmcb.georgetown.edu/~wzhang/web/glycan_images/cfg/extended/";
    // var imageURLsuffix = ".png";

    var motifpageid = document.getElementById("motif_align_para").getAttribute("data-page_id");

    function alignmentQueryConstructor(motif_page_id) {
        var query =
            'PREFIX glycomotif: <http://glycandata.glygen.org/glycomotif#>\n' +
            '\n' +
            'SELECT ?alignment_type ?structure_gtc_acc\n' +
            'WHERE {\n' +
            '\n' +
            '   ?collection a glycomotif:Collection .\n' +
            '   ?motif a glycomotif:Motif .\n' +
            '   \n' +
            '   ?motif glycomotif:id ?PageID .\n' +
            '   ?motif glycomotif:incollection ?collection .\n' +
            '   ?motif glycomotif:glytoucan ?motif_gtc_acc .\n' +
            '   ?motif glycomotif:alignment ?alignment_type .\n' +
            '\n' +
            '   ?alignment glycomotif:motif_accession ?motif_gtc_acc .\n' +
            '   ?alignment glycomotif:alignment_type ?alignment_type .\n' +
            '   ?alignment glycomotif:structure_accession ?structure_gtc_acc .\n' +
            '\n' +
            '   ?motif glycomotif:id "' + motif_page_id + '" .\n' +
            '\n' +
            '}';
        return query
    }



    function sparqlQuery(endpt, query) {

        var params={
            "default-graph": "", "should-sponge": "soft", "query": query,
            "debug": "on", "timeout": 1000, "format": "application/json",
            "save": "display", "fname": ""
        };

        var querypart="";
        for(var k in params) {
            querypart+=k+"="+encodeURIComponent(params[k])+"&";
        }
        var queryURL = endpt + '?' + querypart;

        return queryURL

        var xmlhttp = new XMLHttpRequest();

        xmlhttp.open("GET", queryURL, false);
        xmlhttp.send();

        return xmlhttp.responseText

    }

    function alignment(motif){
        var endpt = "https://edwardslab.bmcb.georgetown.edu/sparql/glycomotifdev/query";
        var query = alignmentQueryConstructor(motif);

        var qurl = sparqlQuery(endpt, query);
        // console.log(qurl);
        jQuery.getJSON(qurl).then(function (a){
            alignmentPart2(a)
        });
    }

    function alignmentPart2(response){

        // var response = JSON.parse(thing);
        var result = response.results.bindings;
        for (var i in result){
            var pair = result[i];
            var structure_gtc_acc = pair.structure_gtc_acc.value;
            var alignment_type = pair.alignment_type.value;
            if (!Object.keys(res).includes(alignment_type)){
                res[alignment_type] = [];
            }
            res[alignment_type].push(structure_gtc_acc);
        }


        for (var i in Object.keys(res)){
            var alignment_type = Object.keys(res)[i];
            res[alignment_type] = res[alignment_type].sort();
        }

        for (var i in Object.keys(res).sort()){
            var alignment_type = Object.keys(res).sort()[i];
            for (var j in res[alignment_type]){
                var structure_gtc_acc = res[alignment_type][j];
                if (!res.all.includes(structure_gtc_acc)){
                    res.all.push(structure_gtc_acc);
                }
            }
        }

        if (res.all.length > 0){
            draw(0);
        }
        else{
            document.getElementById("glycomotif_alignment_result")
                .innerText = "No alignment found for this motif";
        }
        return res
    }

    function CreateGlycanFigure(gtcid, extra) {

        var figure = document.createElement("figure");

        figure.style = "width: 100%; text-align: center; margin: 0px;"
        figure.id = "img_" + gtcid;

        var img = document.createElement("img");
        img.src = imageURLprefix + gtcid + imageURLsuffix;
        img.style = "max-width: 100%; height: auto; vertical-align: middle; ";
        img.acc = gtcid;
        img.onclick = function (d) {
            var acc = this.acc;
            window.open("https://glytoucan.org/Structures/Glycans/" + acc);
        }

        var captionacc = document.createElement("a");
        captionacc.innerText = gtcid;
        captionacc.style.textAlign = "center";
        captionacc.href = "https://glytoucan.org/Structures/Glycans/" + gtcid;

        var caption = document.createElement("figcaption");
        // caption.innerHTML = gtcid;


        figure.appendChild(img);
        caption.appendChild(captionacc);
        if (extra.length > 0){
            caption.innerHTML += " ("+extra+")";
        }
        caption.style.textAlign = "center";
        figure.appendChild(caption);

        return figure
    }



    var colNum = 3;
    var rowNum = 5;
    function draw(pageNum){
        var container = document.getElementById("glycomotif_alignment_result");

        var pageTotalNum = Math.ceil(res.all.length / (rowNum * colNum));

        container.innerHTML = "";
        var table = document.createElement("table");
        table.style.width = "100%";

        var count = 0;

        var tr = document.createElement("tr");

        var i = 1;
        while (i <= colNum){
            var td = document.createElement("td");
            td.style.width = (100/colNum).toString() + "%";
            tr.appendChild(td);
            i+=1;
        }
        table.appendChild(tr);

        var tr = document.createElement("tr");
        var td = document.createElement("td");

        for (var i in res.all.slice((rowNum * colNum)*pageNum, (rowNum * colNum)*pageNum+(rowNum * colNum))){
            var c = res.all.slice((rowNum * colNum)*pageNum, (rowNum * colNum)*pageNum+(rowNum * colNum))[i];
            count += 1;
            if (count == colNum+1){
                table.appendChild(tr);
                count = 1;
                tr = document.createElement("tr");
            }
            td = document.createElement("td");

            var alignment_types = [];
            for (var i in Object.keys(res)){
                var alignment_type = Object.keys(res)[i];
                if (alignment_type == "all"){
                    continue;
                }
                if (res[alignment_type].includes(c)){
                    alignment_types.push(alignment_type)
                }
            }
            alignment_types = alignment_types.sort()
            alignment_types.join(", ")

            var figure = CreateGlycanFigure(c, alignment_types)
            td.appendChild(figure);
            tr.appendChild(td);
        }
        table.appendChild(tr);


        container.appendChild(table);

        var containerButton = document.createElement("div");

        function jump() {
            draw(parseInt(this.pageNum));
        }

        function buttonGenerator() {
            var button = document.createElement("a");
            button.onclick = jump;
            containerButton.appendChild(button);
            return button
        }

        var button, valid;
        valid = pageNum != 0;
        button = document.createElement("a");
        containerButton.appendChild(button);
        button.innerText = "Prev";
        button.onclick = jump;
        if (valid){
            button.pageNum = pageNum-1;
            button.href = "javascript:;";
        }
        else{
            button.pageNum = 0;
        }

        var space = document.createElement("span");
        space.innerHTML = "&nbsp/&nbsp"
        containerButton.appendChild(space);

        var button, valid;
        valid = pageNum != pageTotalNum-1;
        button = document.createElement("a");
        containerButton.appendChild(button);
        button.innerText = "Next";
        button.onclick = jump;
        if (valid){
            button.pageNum = pageNum+1;
            button.href = "javascript:;";
        }
        else{
            button.pageNum = pageNum;
        }


        container.appendChild(document.createElement("br"));
        container.appendChild(document.createElement("br"));
        container.appendChild(document.createElement("br"));
        container.appendChild(containerButton);
        containerButton.style = "position: absolute; right: 10%; ";

    }

    var res = {
        "all":[]
    };
    alignment(motifpageid);



}
